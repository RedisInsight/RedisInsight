name: Tests E2E AppImage
on:
  workflow_call:
    inputs:
      report:
        description: Send report to Slack
        required: false
        default: false
        type: boolean

      debug:
        description: Send report to Slack
        required: false
        default: false
        type: boolean

env:
  E2E_CLOUD_DATABASE_USERNAME: ${{ secrets.E2E_CLOUD_DATABASE_USERNAME }}
  E2E_CLOUD_DATABASE_PASSWORD: ${{ secrets.E2E_CLOUD_DATABASE_PASSWORD }}
  E2E_CLOUD_API_ACCESS_KEY: ${{ secrets.E2E_CLOUD_API_ACCESS_KEY }}
  E2E_CLOUD_DATABASE_HOST: ${{ secrets.E2E_CLOUD_DATABASE_HOST }}
  E2E_CLOUD_DATABASE_PORT: ${{ secrets.E2E_CLOUD_DATABASE_PORT }}
  E2E_CLOUD_DATABASE_NAME: ${{ secrets.E2E_CLOUD_DATABASE_NAME }}
  E2E_CLOUD_API_SECRET_KEY: ${{ secrets.E2E_CLOUD_API_SECRET_KEY }}
  E2E_RI_ENCRYPTION_KEY: ${{ secrets.E2E_RI_ENCRYPTION_KEY }}
  RI_ENCRYPTION_KEY: ${{ secrets.RI_ENCRYPTION_KEY }}
  RI_SERVER_TLS_CERT: ${{ secrets.RI_SERVER_TLS_CERT }}
  RI_SERVER_TLS_KEY: ${{ secrets.RI_SERVER_TLS_KEY }}
  SLACK_TEST_REPORT_KEY: ${{ secrets.SLACK_TEST_REPORT_KEY }}
  TEST_BIG_DB_DUMP: ${{ secrets.TEST_BIG_DB_DUMP }}
  DBUS_SESSION_BUS_ADDRESS: ${{ vars.DBUS_SESSION_BUS_ADDRESS }}
  DISPLAY: ${{ vars.DISPLAY }}
  APPIMAGE_PATH: ${{ vars.APPIMAGE_PATH }}
  DEFAULT_GITHUB_PAGES_URL: ${{ vars.DEFAULT_GITHUB_PAGES_URL }}
  REPORT_NAME: "report-appimage"

jobs:
  e2e-tests-appimage:
    runs-on: ubuntu-latest
    name: E2E AppImage tests
    environment:
      name: production
      url: ${{ env.DEFAULT_GITHUB_PAGES_URL }}/${{ github.run_id }}/${{ env.REPORT_NAME }}
    steps:
    - uses: actions/checkout@v4

    # SSH Debug
    - name: Enable SSH
      uses: mxschmitt/action-tmate@v3
      if: inputs.debug
      with:
        detached: true

    - name: Install WM
      run: |
        sudo apt-get update -y
        sudo apt-get install kmod libfuse2 xvfb net-tools fluxbox netcat -y

    - name: Download AppImage Artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-appimage-build
        path: ./release

    - name: Run X11
      run: |
        Xvfb :99 -screen 0 1920x1080x24 &
        sleep 3
        fluxbox &

    - name: Run tests
      run: |
        .github/e2e/test.app-image.sh

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ env.REPORT_NAME }}
        path: tests/e2e/report

    - name: Send report to Slack
      if: inputs.report && always()
      run: |
        APP_BUILD_TYPE="Electron (Linux)" node ./.github/e2e-results.js
        curl -H "Content-type: application/json" --data @e2e.report.json -H "Authorization: Bearer $SLACK_TEST_REPORT_KEY" -X POST https://slack.com/api/chat.postMessage

    - name: Generate test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: 'Test results: E2E (AppImage)'
        path: tests/e2e/results/results.xml
        reporter: java-junit
        list-tests: 'failed'
        list-suites: 'failed'
        fail-on-error: 'false'

  # Deploy report to Github Pages
  deploy-pages:
    name: Deploy report
    uses: ./.github/workflows/deploy-pages.yml
    needs: 'e2e-tests-appimage'
    if: always()
    with:
      group: 'report'

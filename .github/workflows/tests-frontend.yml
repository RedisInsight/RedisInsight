name: Tests UI
on:
  workflow_call:

env:
  SLACK_AUDIT_REPORT_CHANNEL: ${{ secrets.SLACK_AUDIT_REPORT_CHANNEL }}
  SLACK_AUDIT_REPORT_KEY: ${{ secrets.SLACK_AUDIT_REPORT_KEY }}
  REPORT_NAME: "report-fe"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Frontend tests
    steps:
    - uses: actions/checkout@v4

    - name: Install all libs and dependencies
      uses: ./.github/actions/install-all-build-libs
      with:
        skip-backend-deps: '1'

    - name: UI PROD dependencies audit
      run: |
        FILENAME=ui.prod.deps.audit.json

        yarn audit --groups dependencies --json > $FILENAME || true &&
        FILENAME=$FILENAME DEPS="UI prod" node .github/deps-audit-report.js &&
        curl -H "Content-type: application/json" --data @slack.$FILENAME -H "Authorization: Bearer $SLACK_AUDIT_REPORT_KEY" -X POST https://slack.com/api/chat.postMessage

    - name: UI DEV dependencies audit
      run: |
        FILENAME=ui.dev.deps.audit.json

        yarn audit --groups devDependencies --json > $FILENAME || true &&
        FILENAME=$FILENAME DEPS="UI dev" node .github/deps-audit-report.js &&
        curl -H "Content-type: application/json" --data @slack.$FILENAME -H "Authorization: Bearer $SLACK_AUDIT_REPORT_KEY" -X POST https://slack.com/api/chat.postMessage

    - name: Code analysis
      run: |
        FILENAME=ui.lint.audit.json
        WORKDIR="."

        yarn lint:ui -f json -o $FILENAME || true &&
        FILENAME=$FILENAME WORKDIR=$WORKDIR TARGET="UI" node .github/lint-report.js &&
        curl -H "Content-type: application/json" --data @$WORKDIR/slack.$FILENAME -H "Authorization: Bearer $SLACK_AUDIT_REPORT_KEY" -X POST https://slack.com/api/chat.postMessage

        yarn lint -f json -o $FILENAME || true &&
        FILENAME=$FILENAME WORKDIR=$WORKDIR TARGET="REST" node .github/lint-report.js &&
        curl -H "Content-type: application/json" --data @$WORKDIR/slack.$FILENAME -H "Authorization: Bearer $SLACK_AUDIT_REPORT_KEY" -X POST https://slack.com/api/chat.postMessage

    - name: Unit tests UI
      timeout-minutes: 30
      run: yarn test:cov --ci --silent

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ env.REPORT_NAME }}
        path: report

    - name: Get current date
      id: date
      if: always()
      uses: ./.github/actions/get-current-date

    - name: Deploy report
      uses: ./.github/actions/deploy-test-reports
      if: always()
      with:
        group: 'report'
        path: "${{ vars.DEFAULT_TEST_REPORTS_URL }}/${{ steps.date.outputs.date }}/${{ github.run_id }}/${{ env.REPORT_NAME }}"
        AWS_BUCKET_NAME_TEST: ${{ vars.AWS_BUCKET_NAME_TEST }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        AWS_DISTRIBUTION_ID: ${{ secrets.AWS_DISTRIBUTION_ID }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
